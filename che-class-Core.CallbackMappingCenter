/**
*回调映射类，管理中心
*1.通过此映射可以将回掉函数通过映射关系绑定到目标对象，而不需要直接传递回掉函数；
*2.一般用于将控制器的方法映射到视图对象，视图对象在不访问控制器的情况下，可以将数据传递给控制器。
*3.两者之间没有直接的耦合关系
*/
module Core
{
    export class callbackMappingCenter extends BaseSingleton
    {
        private _callbackFunctionList:Function[] = [];
        private _callbackThisList:any[] = [];
        private _vClasslist:any[] = [];
        
        public register(callbackFunction:Function, callbackThis:any, vClass:any):void
        {
            this._callbackFunctionList.push(callbackFunction);
            this._callbackThisList.push(callbackThis);
            this._vClassList.push(vClass);
        }
        
        /**
        *通过回调方法来注销回调bangding
        */
        public unRegister(callbackFunction:Function):void
        {
            for(var i:number = this._callbackFunctionList.length - 1;i >= 0;i--)
            {
                if(this._callbackFunctionList[i]  == callbackFunction)
                {
                    this._callbackFunctionList.splice(i, 1);
                    this._callbackThisList.splice(i,1);
                    this._vClassList.splice(i, 1);
                }
            }
        }
        
        /**
        *通过回到对象类来注销回调绑定
        *@param thisObj 对调对象
        */
        public unRegisterByThisObj(thisObj:any):void
        {
            for(var i:number = this._callbackThisList.length - 1; i>= 0;i--)
            {
                if(this._calbackThisList[i] == thisObj)
                {
                    his._callbackFunctionList.splice(i, 1);
                    this._callbackThisList.splice(i,1);
                    this._vClassList.splice(i, 1);
                }
            }
        }
        
        /**
        *回调
        */
        public doCallback(vClassInstance:any, type:string, value:any = null):void
        {
            var callBackFuncList:FUnction[] = App.callbackMappingCenter.getCallFunctionList(vClassInstance);
            if(callbackFuncList.length > 0)
            {
                var callBacckFunc:Functon;
                var callBackThis:any;
                for(var i:number = 0;i < callBackFuncList.length;i++)
                {
                    callBackFunc = callBackFuncList[i];
                    callBackThis = App.callbackMappingCenter.getCallFunctionThis(vCalssInstance,callBackFunc);
                    if(callBackFunc != null && callBackThis != null)
                    {
                        callBackFunc.call(callBackthis ,type, value);
                    }
                }
            }
        }
    }
}
