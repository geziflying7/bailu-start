/**
*将显示对象作用于舞台上的模型
*/
module Core
{
    export class DisplayUtilMod extends BaseSingleton
    {
        private static GrayMatrixFilter:egret.ColorMatrixFilter = new egret.ColorMatrixFilter(
                                                                    [0.3,0.6,0,0,
                                                                      0,0.3,0.6,0,
                                                                      0,0,0.3,0.6,
                                                                      0,0,0,0,
                                                                      0,0,1,0]
                                                                    );
       /**
       *将显示对象，从父容器中移除
       *@param dis 需要移除的显示对象
       *@param resetDisplayObject 是否将一些参数初始化
       */
       public removeFromParent(dis:egret.DisplayObject,resetDisplayObject:Boolean = false):void
       {
          if(dis && dis.parent)
          {
              if(dis.parent)
              {
                  dis.parent.removeChild(dis);
              }
              if(resetDisplayObject)
              {
                dis.scaleX = dis.scaleY = dis.rotation = dis.skewX = dis.skewY = 0;
                dis.alpha = 1;
              }
          }
       }
       
       /**
       *清除显示容器内部的对象
       *@param dc 显示容器
       *@param autoDestroy 移除子显示对象时，是否同时销毁该子显示对象（自动调用destroy方法）
       *@param clearContent 移除子显示对象时，同时清除其加载的资源
       *@param clearChild  移除子显示对象时，是否清除其内部的子显示对象（逐层清除）
       */
       public clearDisplayContaner(dc:egret.DisplayObjectConteainer,autoDestroy:Boolean = false,clearContent:Boolean = false,clearChildBoolean = false):void
       {
          var dis:egret.DisplayObject;
          for(var i:number = dc.numChildren - 1;i >= 0; i--)
          {
              dis = dc.removeChildAt(i);
              if(autoDestroy&& dis["destroy"]) dis["destroy"]();
          }
       }
    }
}
